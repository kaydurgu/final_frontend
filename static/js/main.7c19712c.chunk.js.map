{"version":3,"sources":["components/CurrInput.js","components/TablePair.js","App.js","index.js"],"names":["CurrInput","props","React","createElement","className","type","value","amount","onChange","event","onAmountChange","target","currency","onCurrencyChange","currencies","map","TablePair","_ref","rates","class","scope","toFixed","App","amount1","setAmount1","useState","amount2","setAmount2","currency1","setCurrency1","currency2","setCurrency2","setRates","format","number","handleAmount1Change","useEffect","axios","get","then","response","data","Object","keys","onClick","newCurrency2","newAmount2","FaExchangeAlt","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.7c19712c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\"\r\nimport './CurrInput.css';\r\nfunction CurrInput(props){\r\n    return (\r\n        <div className=\"collection\">\r\n                    <div className=\"form-group\">\r\n                        <input className=\"form-control\" type=\"text\" value={props.amount} onChange={\r\n                            event => props.onAmountChange(event.target.value)\r\n                        } />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <select className=\"form-control\" value={props.currency} onChange={event => props.onCurrencyChange(event.target.value)}>\r\n                            {props.currencies.map((currency) => (\r\n                                <option value={currency}>{currency}</option>\r\n                            ))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n    );\r\n}\r\nCurrInput.propTypes = {\r\n    amount: PropTypes.number.isRequired,\r\n    currency: PropTypes.string.isRequired,\r\n    currencies: PropTypes.array,\r\n    onAmountChange : PropTypes.func,\r\n    onCurrencyChange : PropTypes.func,\r\n}\r\nexport default CurrInput;","import React from 'react';\r\n\r\nconst TablePair = ({ rates }) => {\r\n    return (\r\n        <div>\r\n                <table class=\"table table-striped\">\r\n        <thead>\r\n            <tr>\r\n            <th scope=\"col\">First Currency </th>\r\n            <th scope=\"col\">Second Currency</th>\r\n\r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr>\r\n            <td> 1 KGS</td>\r\n            <td> {(rates['RUB']/1).toFixed(4)} RUB</td>\r\n            </tr>\r\n            <tr>\r\n            <td> 1 USD</td>\r\n            <td>{(rates['KGS'] / rates['USD']).toFixed(4)} KGS</td>\r\n            </tr>\r\n            <tr>\r\n            <td> 1 KGS</td>\r\n            <td>{(rates['KZT'] / rates['KGS']).toFixed(4)} KZT</td>\r\n            </tr>\r\n            <tr>\r\n            <td> 1 EUR</td>\r\n            <td>{(rates['KGS'] / rates['EUR']).toFixed(4)} KGS</td>\r\n            </tr>\r\n            <tr>\r\n\r\n            <td> 1 EUR</td>\r\n            <td>{(rates['USD'] / rates['EUR']).toFixed(4)} USD</td>\r\n\r\n            </tr>\r\n            <tr>\r\n            <td> 1 EUR</td>\r\n            <td>{(rates['GBP'] / rates['EUR']).toFixed(4)} GBP</td>\r\n            </tr>\r\n        </tbody>\r\n        </table>\r\n        \r\n        </div>\r\n   )};\r\n   \r\n   export default TablePair;","import React from 'react';\r\nimport './App.css';\r\nimport CurrInput from './components/CurrInput';\r\nimport { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport TablePair from './components/TablePair';\r\nimport { FaExchangeAlt } from 'react-icons/fa';\r\nfunction App() {\r\n\r\n  const [amount1, setAmount1] = useState(1);\r\n  const [amount2, setAmount2] = useState(1);\r\n  const [currency1 ,setCurrency1] = useState('KGS');\r\n  const [currency2 ,setCurrency2] = useState('KGS');\r\n  const [rates , setRates] = useState([]);\r\n  function format(number) {\r\n    return number.toFixed(4);\r\n  }\r\n  useEffect(() => {\r\n    axios.get('https://api.apilayer.com/fixer/latest?base=KGS&apikey=wTGSZhXWhsoMaTb7sMBijxO3w8YaufE8')\r\n    .then(response => {\r\n      response.data.rates['Qorot'] = 0.2000;\r\n      response.data.rates['Nan'] = 0.0357;\r\n      response.data.rates['Toibos'] = 0.0138;\r\n      response.data.rates['Shaurma'] = 0.005;\r\n      setRates(response.data.rates);\r\n    })\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (!!rates) {\r\n      function init() {\r\n        handleAmount1Change(1);\r\n      }\r\n      init();\r\n    }\r\n  }, [rates]);\r\n\r\n  function handleAmount1Change(amount1) {\r\n    setAmount2(format(amount1 * rates[currency2] / rates[currency1]));\r\n    setAmount1(amount1);\r\n  }\r\n\r\n  function handleCurrency1Change(currency1) {\r\n    setAmount2(format(amount1 * rates[currency2] / rates[currency1]));\r\n    setCurrency1(currency1);\r\n  }\r\n\r\n  function handleAmount2Change(amount2) {\r\n    setAmount1(format(amount2 * rates[currency1] / rates[currency2]));\r\n    setAmount2(amount2);\r\n  }\r\n\r\n  function handleCurrency2Change(currency2) {\r\n    setAmount1(format(amount2 * rates[currency1] / rates[currency2]));\r\n    setCurrency2(currency2);\r\n  }\r\n function handleButtonClick() {\r\n    const newCurrency2 = currency1;\r\n    const newAmount2 = amount1;\r\n\r\n    setAmount1(amount2);\r\n    setAmount2(newAmount2);\r\n    setCurrency1(currency2)\r\n    setCurrency2(newCurrency2);\r\n }\r\n  return (\r\n    <div className=\"App container\">\r\n        <div>\r\n              <h1> Currency Converter</h1>\r\n              <CurrInput \r\n              onAmountChange={handleAmount1Change}\r\n              onCurrencyChange={handleCurrency1Change}\r\n              currencies={Object.keys(rates)} \r\n              amount={amount1} \r\n              currency={currency1} \r\n              />\r\n              <button className=\"btn btn-primary\" onClick={handleButtonClick}>\r\n          <FaExchangeAlt />\r\n        </button>\r\n              <CurrInput  \r\n              onAmountChange={handleAmount2Change}\r\n              onCurrencyChange={handleCurrency2Change}\r\n              currencies={Object.keys(rates)} \r\n              amount={amount2} \r\n              currency={currency2} \r\n              /> \r\n         </div>\r\n          <div className='tables'>\r\n            <h1>Most Popular Pairs</h1>\r\n            <TablePair rates={rates}/> \r\n          </div>\r\n    </div>\r\n  );\r\n}\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n    <App />\r\n);\r\n\r\n"],"sourceRoot":""}